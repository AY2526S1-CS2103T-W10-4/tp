@startuml

' ===== UI slice =====

interface Ui {
+ start(primaryStage : Stage)
}

abstract class UiPart<T> {
+ getRoot() : T
}

class UiManager {
- logic : Logic
- mainWindow : MainWindow
+ start(primaryStage : Stage)
+ getClubTrack() : ReadOnlyClubTrack
}

class MainWindow {
- primaryStage : Stage
- logic : Logic
- personListPanel : PersonListPanel
- resultDisplay : ResultDisplay
- helpWindow : HelpWindow
+ fillInnerParts()
+ show()
}

class PersonListPanel {
+ PersonListPanel(personList : ObservableList<Person>)
}

class PersonCard {
+ PersonCard(person : Person, displayedIndex : int)
}

class CommandBox {
+ CommandBox(executor : CommandExecutor)
}

class ResultDisplay {
+ setFeedbackToUser(text : String)
}

class StatusBarFooter {
+ StatusBarFooter(saveLocation : Path)
}

class HelpWindow {
+ show()
+ hide()
+ focus()
}

' Inheritance/implementation
UiManager ..|> Ui
UiPart <|-- MainWindow
UiPart <|-- PersonListPanel
UiPart <|-- PersonCard
UiPart <|-- CommandBox
UiPart <|-- ResultDisplay
UiPart <|-- StatusBarFooter
UiPart <|-- HelpWindow

' Composition/containment
UiManager "1" *-- "1" MainWindow
MainWindow "1" *-- "1" CommandBox
MainWindow "1" *-- "1" ResultDisplay
MainWindow "1" *-- "1" PersonListPanel
MainWindow "1" *-- "1" StatusBarFooter
MainWindow "1" *-- "0..1" HelpWindow
PersonListPanel "1" *-- "*" PersonCard

@enduml
