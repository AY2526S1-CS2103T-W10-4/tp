@startuml

title ClubTrack - Logic Layer

interface Logic {
  + execute(commandText) : CommandResult
  + getClubTrack() : ReadOnlyClubTrack
  + getFilteredPersonList() : ObservableList<Person>
  + getClubTrackFilePath() : Path
}

class LogicManager {
  + execute(commandText) : CommandResult
  + getClubTrack() : ReadOnlyClubTrack
  + getClubTrackFilePath() : Path
  + getFilteredPersonList() : ObservableList<Person>
}

class ClubTrackParser {
  + parseCommand(userInput) : Command
}

abstract class Command {
  + execute(model) : CommandResult
}

class CommandResult {
  + feedbackToUser : String
  + showHelp : boolean
  + exit : boolean
  + isShowHelp() : boolean
  + isExit() : boolean
}

' Command implementations using placeholder notation
class AddCommand {
  + execute(model) : CommandResult
}

class EditCommand {
  + execute(model) : CommandResult
}

class DeleteCommand {
  + execute(model) : CommandResult
}

class XYZCommand

' Key relationships
LogicManager ..|> Logic
LogicManager --> ClubTrackParser : uses
ClubTrackParser --> Command : creates
Command --> CommandResult : produces

' Command hierarchy
Command <|-- AddCommand
Command <|-- EditCommand
Command <|-- DeleteCommand
Command <|-- XYZCommand

note right of XYZCommand : Represents other commands:\nTagCommand, \nMarkCommand, \nUnmarkCommand,\nClearCommand, \nSwitchCommand, \nSearchCommand, \nAttendanceCommand, \nAddPointsCommand, \nMinusPointsCommand etc.

note right of Command : All commands follow\nthe Command pattern for\nconsistent execution

note top of ClubTrackParser : Parses user input into\nappropriate Command objects\nwith error handling

note right of LogicManager : Facade for Logic layer\nCoordinates parsing and\ncommand execution

@enduml
