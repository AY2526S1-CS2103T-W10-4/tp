@startuml

title ClubTrack - Storage Layer

' Core storage interfaces
interface Storage {
  + readClubTrack() : Optional<ClubTrack>
  + saveClubTrack(clubTrack)
  + getClubTrackFilePath() : Path
  + readUserPrefs() : Optional<UserPrefs>
  + saveUserPrefs(userPrefs)
}

interface ClubTrackStorage {
  + readClubTrack() : Optional<ClubTrack>
  + saveClubTrack(clubTrack)
  + getClubTrackFilePath() : Path
}

interface UserPrefsStorage {
  + readUserPrefs() : Optional<UserPrefs>
  + saveUserPrefs(userPrefs)
  + getUserPrefsFilePath() : Path
}

class StorageManager {
  + readClubTrack() : Optional<ClubTrack>
  + saveClubTrack(clubTrack)
  + getClubTrackFilePath() : Path
  + readUserPrefs() : Optional<UserPrefs>
  + saveUserPrefs(userPrefs)
}

class JsonClubTrackStorage {
  + readClubTrack() : Optional<ClubTrack>
  + saveClubTrack(clubTrack)
  + readClubTrack(filePath) : Optional<ClubTrack>
  + saveClubTrack(clubTrack, filePath)
}

class JsonUserPrefsStorage {
  + readUserPrefs() : Optional<UserPrefs>
  + saveUserPrefs(userPrefs)
  + readUserPrefs(filePath) : Optional<UserPrefs>
}

' JSON serialization classes
class JsonSerializableClubTrack {
  + toModelType() : ClubTrack
}

class JsonAdaptedPerson {
  + toModelType() : Person
}

class JsonAdaptedTag {
  + toModelType() : Tag
}

' Exception classes
class DataConversionException {
  + DataConversionException(cause)
}

' Key relationships
StorageManager ..|> Storage
JsonClubTrackStorage ..|> ClubTrackStorage
JsonUserPrefsStorage ..|> UserPrefsStorage

StorageManager *-- ClubTrackStorage : manages
StorageManager *-- UserPrefsStorage : manages

' JSON conversion relationships
JsonClubTrackStorage --> JsonSerializableClubTrack : uses
JsonSerializableClubTrack "1" *-- "*" JsonAdaptedPerson : contains
JsonAdaptedPerson "1" *-- "*" JsonAdaptedTag : contains

' Exception relationships
JsonClubTrackStorage --> DataConversionException : throws
JsonUserPrefsStorage --> DataConversionException : throws

note right of JsonSerializableClubTrack : Handles conversion between\nJSON format and model objects\nwith error handling

note top of StorageManager : Coordinates all storage\noperations for the application\nwith backup functionality

note bottom of DataConversionException : Thrown when JSON data\ncannot be converted to\nmodel objects

@enduml
