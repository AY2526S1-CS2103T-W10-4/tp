@startuml

' ===== Model slice =====

interface Model

class ModelManager {
- clubTrack : ClubTrack
- userPrefs : UserPrefs
- filteredPersons : FilteredList<Person>
+ getClubTrack() : ReadOnlyClubTrack
+ setClubTrack(clubTrack: ReadOnlyClubTrack) : void
+ getFilteredPersonList() : ObservableList<Person>
+ updateFilteredPersonList(predicate: Predicate<Person>) : void}

class ClubTrack {
- persons : UniquePersonList
+ getPersonList() : ObservableList<Person>
+ addPerson(Person p)
+ removePerson(Person target)
}

class UniquePersonList {
- internalList : List<Person>
+ add(p: Person)
+ remove(p: Person)
+ setPersons(UniquePersonList replacement)
}

class Person {
- name : Name
- phone : Phone
- email : Email
- yearOfStudy : int
- faculty : String
- address : Address
- tags : Set<Tag>
- isPresent : boolean
- points : Points
+ getName() : Name
+ getPhone() : Phone
+ getEmail() : Email
+ isSamePerson(otherPerson: Person) : boolean
+ markPresent() : void
+ markAbsent() : void
}

class UserPrefs {
- guiSettings : GuiSettings
- clubTrackFilePath : Path
+ getClubTrackFilePath() : Path
}

' Value objects
class Name
class Phone
class Email
class Address
class Tag
class Points

' Interfaces
interface ReadOnlyClubTrack
interface ReadOnlyUserPrefs

' Relationships
ModelManager ..|> Model
ClubTrack ..|> ReadOnlyClubTrack
UserPrefs ..|> ReadOnlyUserPrefs

ModelManager "1" *-- "1" ClubTrack
ModelManager "1" *-- "1" UserPrefs
ClubTrack "1" *-- "1" UniquePersonList
UniquePersonList "1" *-- "*" Person
Person *-- Name
Person *-- Phone
Person *-- Email
Person *-- Address
Person *-- Points
Person o-- Tag

@enduml
